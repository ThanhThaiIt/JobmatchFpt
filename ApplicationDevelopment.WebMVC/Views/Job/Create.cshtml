@using ApplicationDevelopment.WebMVC.Commons
@model ApplicationDevelopment.WebMVC.Models.JobViewModel

@{
    ViewData["Title"] = "Create";
    var isCreate = Model == null || Model.Id == Guid.Empty;
    var actionString = isCreate ? "Create" : "Edit";
    var buttonName = isCreate ? "Create" : "Update";
}

<h1>Create a job</h1>
<button type="button" onclick="openModalCreateJobType();">Create a job type</button>
<hr />
<div class="row">
    <div class="col-md-4">
        @* <form asp-controller="Job" asp-action="Create"> *@
        <form asp-action="@actionString">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Id" type="hidden" class="form-control" />

            <div id="announcement">@ViewData[ViewBags.ANNOUNCEMENT]</div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Requirements" class="control-label"></label>
                <textarea asp-for="Requirements" class="form-control"></textarea>
                <span asp-validation-for="Requirements" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobTypeId" class="control-label">Job Type</label>
                <select asp-for="JobTypeId" asp-items="ViewBag.JobTypes" class="form-control"></select>
                <span asp-validation-for="JobTypeId" class="text-danger"></span>
            </div>

            <div class="form-group" style="text-align: center;">
                <input type="submit" value="@buttonName" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <div id="divJobList" class="col-md-8">
        <h3>Danh sách công việc đã tạo</h3>
        @await Component.InvokeAsync("JobList")
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
          // let buttonOpenModal = document.getElementById("buttonOpenModal");
          // const modalSizes = {
          //     small: "modal-sm",
          //     medium: "",
          //     large: "modal-lg",
          //     extraLarge: "modal-xl",
          // }
        document.addEventListener("DOMContentLoaded", () => {
            // openModal("Title", "Test thử nghiệm");
            // openModal("Title", "Test thử nghiệm", modalSizes.extraLarge);
        });

        
        function openModalCreateJobType(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("Create", "JobType")',
                // cache: false,
                // dataType: "json",
                // data: {},
                complete: function () {
                    
                },
                success: function (data, textStatus, XMLHttpRequest) {
                    openModal("Job Type", data, modalSizes.large);
                },
                error: function (error) {
                    // ???
                },
            });
        }
        function createJobType(){
            let formJobType = document.getElementById("formJobType");
            let jobTypeData;
            if(formJobType) {
                let inputId = formJobType.querySelector("input[Id='Id']");
                let inputName = formJobType.querySelector("input[Id='Name']");
                let textareaDescription = formJobType.querySelector("textarea[Id='Description']");
                jobTypeData = {
                    id: inputId.value,
                    name: inputName.value,
                    description: textareaDescription.value
                }
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("Create", "JobType")',
                data: {jobTypeVM: jobTypeData},
                complete: function () {
                    //=== Đóng Modal lại ===//
                    closeModal();
                    //TODO:=== Refresh danh sách Job Type===//
                },
                success: function (response) {
                  console.log("Response: ", response.message);  
                },
                error: function (error) {
                    // ???
                },
            });
        }
        function deleteJob(idJob){
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete", "Job")',
                data: { idJob },
                complete: function () {
                    //TODO:=== Refresh danh sách Job ===//
                    reloadJobList();
                },
                success: function (response) {
                  console.log("Response: ", response.message);
                  console.log("StatusCode: ", response.statusCode);
                },
                error: function (error) {
                    // ???
                },
            });
        }

        function reloadJobList(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAll", "Job")',
                // data: { idJob: idJob},
                complete: function () {

                },
                success: function (response) {
                  let divJobList = document.getElementById("divJobList");
                  if(divJobList){
                      divJobList.innerHTML = response;
                  }
                },
                error: function (error) {
                    // ???
                },
            });
        }
    </script>
}
